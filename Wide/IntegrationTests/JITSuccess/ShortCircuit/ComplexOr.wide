type t {
    val : bool.pointer;
    result : bool;
    type(arg : bool.lvalue, arg2 : bool)
       : val := &arg
       : result := arg2 
   {}
    f() { return true; }
    ~type() { *val = result;}
}
Main() {
    ret := true;
    ret2 := false;
    {
        true | t(ret, false).f();
        false | t(ret2, true).f();
    }
    return ret & ret2;
}