type t {
    ptr : int64.pointer;
    type(arg : int64.lvalue, constructed : int64.lvalue) : ptr := &arg { ++constructed; }
    ~type() { *ptr += 1; }
}
g() {
    throw true;
    return true;
}
f(arg : t, arg2 : bool) {}
Main() {
    destructed := 0;
    constructed := 0;
    except := false;
    {
        try { 
            f(t(destructed, constructed), g());
        } catch(val : bool.lvalue) {
            except = val;
        }
    }
    return destructed == constructed & except;
}