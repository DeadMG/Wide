Lexer:
Test @identifiers.
Add floating-point literals.
Add extra forms of integer literal like hex.
Investigate that fucking close bracket.s
Add tests.

Parser:
Add local using statements.
Add module X.Y {}
Add X.Y.Z() {}
Add type X.Y.Z {}
Add short-form lambdas.
Cleanup some of the old parsing style that required construct with all parameters for concurrency.
Add tests.

Builder:
Change AST to owning.
Change Combiner so that it does not duplicate some things unnecessarily now.

Analyzer:
Add support for the new parser directives.
Add the ability to call destructors of stack-based objects implicitly.
Add support for exceptions
Fix ExportName to create a trampoline instead of actually exporting.
Add all primitive operators and types.
Add metafunctions.
Add ability for C++ to call into Wide public global functions without having to declare it.
Add ability for C++ to understand Wide member functions, constructors, and destructors.
Add exceptions.
Add the ability for Wide to expose Wide generic functions as C++ templates
Add the ability for Wide functions to refer to constant context.
Add the ability to resolve one function from a C++ overload set.
Fix default arguments.
Add polymorphic types.
Look into whether the UDT destructor code is modifying the AST.
Add tests.

WideLibrary:
Add the ability for optional to contain lvalue references.
Add the ability for Wide to have bidi and random-access ranges.
Add the ability for Wide code to handle Unicode input and output.
Add Wide containers and algorithms that require bidi/random access.

Codegen:
Add support for the same code-generation tree to be built by multiple LLVM codegenerators for use in Analyzer's metafunctions.
Add tests.

Util/Driver:
Change Compile so that the combiner errors are reported properly.


