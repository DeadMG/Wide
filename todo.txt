Lexer:
Test @identifiers.
Add floating-point literals.
Add extra forms of integer literal like hex.
Add tests.

Parser:
Add local using statements.
Add short-form lambdas.
Cleanup some of the old parsing style that required construct with all parameters for concurrency.
Add tests.

Builder:
Change AST to owning.

Analyzer:
Add unsafe pointer indexing.
Add library is-a.
Add polymorphic types.
Add boolean testing for UDTs.
Add inheriting constructors.
Add defaulted members.
Add C++ operator understanding.
Add exception re-throwing.
Add abstract functions, override/final/new.
Add static reflection.#
Change ADL to look up in base class.
Fix bases to not have to be an identifier.
Fix member initialization syntax.
Consider constraints.
Add default arguments for Wide functions.
Add dynamic destructors.
Add noexcept handling.
Add C++ handling of in-class initializers.
Add all primitive operators and types.
Add metafunctions.
Add ability for C++ to call into Wide public global functions without having to declare it.
Add the ability for Wide to expose Wide generic functions as C++ templates
Consider parameterised destructors.
Add the ability to add token types, parsing paths, statement types, etc.
Add access to instance member overload sets.
Add dynamic operator overloads.
More tests.

WideLibrary:
Add the ability for optional to contain lvalue references.
Add the ability for Wide to have bidi and random-access ranges.
Add the ability for Wide code to handle Unicode input and output.
Add Wide containers and algorithms that require bidi/random access.

Codegen:
Add support for the same code-generation tree to be built by multiple LLVM codegenerators for use in Analyzer's metafunctions.
Add tests.

Util/Driver:
Change Compile so that the combiner errors are reported properly.
