module Standard {
    module Algorithm {
        Fold(pred) {
            return function(range)[pred := std.move(pred)] {
                var := range();
                return Fold(std.move(pred), *std.move(var))(std.move(range));
            };
        }
        Fold(pred, initial) {
            return function(range)[pred := std.move(pred), initial := std.move(initial)] {
                var := range();
                if (~var)
                    return std.move(initial);
                return Fold(std.move(pred), pred(std.move(initial), *std.move(var)))(std.move(range));
            };
        }
    }
}